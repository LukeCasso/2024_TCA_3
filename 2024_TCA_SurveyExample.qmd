---
title: "2024 - TCA - Survey - 1"
author: "Niall McGuinness"
format: html
date: "`r format(Sys.Date(), '%B %d %Y')`"
---

```{r}
# install knitr for a pretty table - see Appencix C
if(!require("knitr"))
   install.packages("knitr")
library(knitr)
```


### Overview
- What survey was conducted?
- When and with whom was it conducted? (date, N (M, F, O))
- How do the participants breakdown in terms of demographic?
(sampling method (random, stratified, cluster, convenience), age, preference)
- Who conducted the survey?
- What was the purpose of the survey?
- How were the results gathered?
- How was user-testing carried out? conditions? (online, in-person, etc.)
- What were the pre-conditions and information provided to the participants?
- How were the results stored?

## Survey Analysis

The survey data generated included 20 rows of respondant data.

```{r load the CSV, echo=FALSE}
# Load the data
survey_data <- read.csv("data/survey_data_1_20.csv")
```

### Descriptive Statistics

This section provides basic descriptive statistics for the collected data. It includes measures of central tendency and variability.

```{r summary statistics, echo=FALSE}
median_pl <- median(survey_data$Purchase.Likelihood)
sd_pl <- sd(survey_data$Purchase.Likelihood)

```

The median purchase likelihood score was `r median_pl` with a standard deviation of `r round(sd_pl, 2)`.

```{r}
# Create a histogram of the puchase likelihood
hist(survey_data$Purchase.Likelihood,
     main = "Fig 1.0- Q1: Purchase Likelihood",
     xlab = "Purchase Likelihood",
     ylab = "# Respondants",
     col = "lightblue",
     border = "black")
```

### Tests for Normality

Examining the data in more detail with a QQ plot it is clear that the data is not normally distributed.

```{r}
# Create a QQ plot
qqnorm(survey_data$Purchase.Likelihood)
qqline(survey_data$Purchase.Likelihood)

# Determine normality from shapiro test
results_sw <- shapiro.test(survey_data$Purchase.Likelihood)
p_value <- result_sw$p.value
is_normal <- p_value > 0.05
```

A `r result_sw$method` was conducted on the Purchase Likelihood data. From the output obtained we `r if(is_normal){"can"}else{"cannot"}` assume normality and **accept the null hypothesis** as the p-value (p=`r round(p_value, 3)`) is `r if(is_normal){"greater"}else{"less"}` than 0.05.


### Correlation Analysis

This section investigates the relationships between two paired numerical variables. Both numerical variables were examined for normality (see previous section) and are considered normal. We may therefore use Pearson's correlation coefficient to assess the strength of the relationship between these variables.

```{r}
# Scatterplot
plot(survey_data$Hours.Week, survey_data$Purchase.Likelihood)

```

### Appendix A - Survey Questions

## Game Narrative
1.  **How would you rate the overall game experience? (Numerical)**
    -   Scale: 1 (Poor) to 10 (Excellent)
2.  **How many hours do you play the game per week? (Numerical)**
    -   Open numeric response
3.  **What is your preferred game genre? (Categorical)**
    -   Options: Action, Adventure, Puzzle, Strategy, Other
4.  **On a scale of 1-10, how difficult do you find the game? (Numerical)**
    -   Scale: 1 (Very Easy) to 10 (Very Hard)

## Game Mechanics    
    
5.  **Have you experienced any bugs while playing the game? (Categorical)**
    -   Options: Yes, No
6.  **Which feature of the game do you like the most? (Categorical)**
    -   Options: Graphics, Storyline, Gameplay Mechanics, Multiplayer Mode, Other
7.  **Would you recommend this game to a friend? (Categorical)**
    -   Options: Definitely, Probably, Not Sure, Probably Not, Definitely Not
8.  **How likely are you to purchase in-game content? (Numerical)**
    -   Scale: 0 (Not Likely) to 10 (Very Likely)
    
### Appendix B - Survey Data

A [link](www.dkit.ie) to the survey is provided...

### Appendix C - Converting categorical to numerical data

```{r}
# Convert categorical data to numerical
survey_data$Game.Genre <- as.numeric(factor(survey_data$Game.Genre))
survey_data$Bugs <- as.numeric(factor(survey_data$Bugs))
survey_data$Feature.Like <- as.numeric(factor(survey_data$Feature.Like))

# make a table from these three new numerical variables
table(survey_data$Game.Genre, survey_data$Bugs, survey_data$Feature.Like)

# print a pretty version of the table
kable(table(survey_data$Game.Genre, survey_data$Bugs, survey_data$Feature.Like))


```


